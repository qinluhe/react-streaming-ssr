{"version":3,"file":"src_Comments_js.main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA","sources":["webpack://react-ssr/./src/Comments.js","webpack://react-ssr/./src/data.js","webpack://react-ssr/./src/withDataFetching.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport withDataFetching from './withDataFetching';\n\nconst Comments = ({\n  data\n}) => {\n  return (\n    <div>\n      {data?.map((comment, i) => (\n        <p className=\"comment\" key={i}>\n          {comment}\n        </p>\n      ))}\n    </div>\n  );\n}\nComments.getDataId = function() {\n  return 'comment-list'\n}\nComments.getFetchingProps = function(data) {\n  return data.read();\n}\n\n\nexport default withDataFetching(Comments)\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {createContext, useContext} from 'react';\n\n// Note: this file does not demonstrate a real data fetching strategy.\n// We only use this to simulate data fetching happening on the server\n// while the cache is populated on the client. In a real app, you would\n// instead use a data fetching library or Server Components for this.\n\nconst DataContext = createContext(null);\n\nexport function DataProvider({children, data}) {\n  return <DataContext.Provider value={data}>{children}</DataContext.Provider>;\n}\n\n\n\nexport function useData() {\n  const ctx = useContext(DataContext);\n  return ctx;\n}\n","import { useData } from './data';\n\nexport default function (WrappedComponent) {\n  return function ({ ...props }) {\n\n    const resource = useData();\n    const id = WrappedComponent.getDataId();\n    const isClientSide = typeof window !== 'undefined';\n    let data;\n    \n    if (isClientSide) {\n        \n        const dataElement = document.querySelector(`#${id}`);\n        const serverData = JSON.parse(dataElement.dataset.serverData || '');\n\n        if (serverData) {\n          data = serverData;\n        }\n    }\n    // 其他 case 下使用 data fetching 获取数据（服务端、客户端是同构的）\n    if (!data) {\n      data = WrappedComponent.getFetchingProps(resource);\n    }\n\n    return <>\n    <div id={id} data-server-data={JSON.stringify(data)} />\n    <WrappedComponent {...props} data={data} />\n    </>;\n  }\n};"],"names":[],"sourceRoot":""}